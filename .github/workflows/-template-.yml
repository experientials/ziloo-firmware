name: TargetMCU

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the RP2040 branch
  push:
    branches: [ hw/-template- ]
    paths:
      - 'device/-template-/**/*'
      - 'device/*'      
  pull_request:
    branches: [ hw/-template- ]
    paths:
      - 'device/-template-/**/*'
      - 'device/*'      

jobs:
  build:
    runs-on: [self-hosted, Linux, raspbian]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: create required directories
        run: |
          mkdir -p workspace

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: ziloo/image-builder
      
      - name: Fetch CircuitPython submodules
        run: |
          cd circuitpython
          make fetch-submodules
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: builder.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}        
  build-aarch:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        board: ${{ fromJSON(needs.test.outputs.boards-aarch) }}
    if: ${{ needs.test.outputs.boards-aarch != '[]' }}
    steps:
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - uses: actions/checkout@v2.2.0
      with:
        submodules: false
        fetch-depth: 1
    - name: Get CP deps
      run: python tools/ci_fetch_deps.py ${{ matrix.board }} ${{ github.sha }}
    - name: Install dependencies
      run: |
        sudo apt-get install -y gettext mtools
        pip install -r requirements-ci.txt -r requirements-dev.txt
        wget --no-verbose https://adafruit-circuit-python.s3.amazonaws.com/gcc-arm-10.3-2021.07-x86_64-aarch64-none-elf.tar.xz
        sudo tar -C /usr --strip-components=1 -xaf gcc-arm-10.3-2021.07-x86_64-aarch64-none-elf.tar.xz
        wget --no-verbose https://adafruit-circuit-python.s3.amazonaws.com/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
        sudo tar -C /usr --strip-components=1 -xaf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2
    - name: Versions
      run: |
        gcc --version
        aarch64-none-elf-gcc --version
        arm-none-eabi-gcc --version
        python3 --version
    - name: Setup build failure matcher
      run: echo "::add-matcher::$GITHUB_WORKSPACE/.github/workflows/match-build-fail.json"
    - name: build
      run: echo Hello, world!
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.board }}
        path: bin/${{ matrix.board }}
